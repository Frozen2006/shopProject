@using BLL
@model TestProject.Models.CategoryDetailsModel

<style>
    .category_box {
        text-align: center;
        display: inline-block;
        margin: 20px 0;
    }
    .category_box a {
        display: block;
    }

    .category_nav_box {
        display: inline-block;
    }
    .category_wrapper {
        margin: 0 20%;
    }
</style>

<div class="row-fluid">
    @Html.Action("CategoryNavigation", new { category = Model.Category })

    <div>
        @if (Model.Subcategories.Count() != 0)
        {

            //common model wrapper
            <div class="category_wrapper">

            @{var subcategories = Model.Subcategories.ToArray();
              int i = 0;

              while (i < subcategories.Length)
              {
                  //3 categories wrapper
                  <div class="row">
                      @for (int j = 0; j < 3 && i < subcategories.Length; j++)
                      {
                          //1 category
                          <div class="span4 category_box">
                              @{
                                  var subcategory = subcategories[i];
                                  string path = "/Image/CategoryImg/" + subcategory.Id;   
                                }
                                <img src="@path" />

                          
                              @if(subcategory.Categories1.Count() != 0)
                              {
                                //if has subcategories
                                @Html.ActionLink(subcategory.Name, "Details", new { id = subcategory.Id })   
                              }
                              else
                              {
                                //if not, view products
                                @Html.ActionLink(subcategory.Name, "List", "Product", new { categoryId = subcategory.Id }, null)
                              } 
                          </div>
                          
                          i++;          
                      }
                  </div>
              }
              
              }

            </div>
        }    
        
    </div>
</div>