@using iTechArt.Shop.Logic.Services
@model iTechArt.Shop.Web.Models.ProductListModel

@Scripts.Render("~/Content/js/productpage.js")

@Html.Action("CategoryNavigation", "Category", new { category = Model.Category })

@if (Model.Products.Count() != 0)
{  
<div class="products"> 
    <h3>Products</h3>

    <div id="sort_panel">
        @{
            //Calculating selected item index to make it selected
            int index = 0;
            index += (int)Model.SortType * 2;
            index += Model.Reverse ? 1 : 0;
        }

        <select id="sort" onchange="getPage()">
            <option @(index == 0?"selected":"")>Alphabetic ascending</option>      
            <option @(index == 1?"selected":"")>Alphabetic descending</option> 
            <option @(index == 2?"selected":"")>Price ascending</option>                 
            <option @(index == 3?"selected":"")>Price descending</option>            
        </select>

        @for (int i = 1; i < 4; i++)
        {
            int size = (int)Math.Pow(10, i);
            @Html.ActionLink("Show by " + size, "List", new { categoryId = Model.Category.Id, sort = Model.SortType, pageSize = size, reverse = Model.Reverse }, new { @class = "btn" })
        }
    </div>

@foreach(var product in Model.Products)
{
    <div class="well product_box">
        @{
            string href = "/product/details/" + product.Id;
            string path = "/Image/ProductImg/" + product.Id;
            
            <div class="info">
                <a class="no_underline" href="@href">
                    <img class="product_photo" width="70" height="70" src="@path" />
                </a>
                <a href="@href">
                    @product.Name
                </a>
            </div>
                
            <div class="tocart">
                @Html.Partial("../Partial/Counter", product)  
            </div>
        }     
    </div>
}

@{
    int pageSize = Model.PageSize;
    int productCount = Model.Category.Products.Count();
    const int maxPageCount = 15;

    int pageCount = productCount / pageSize + 1;
}
    <button id="add_all_button" class="btn btn-danger" onclick="addAll()">Add all</button>

    <div class="pagination pagination-centered">
        <ul>
        @if (pageCount >= maxPageCount)
        {
            const int linkCount = 6;

            for (int i = 1; i <= linkCount; i++)
            {
                <li>
                    @Html.ActionLink(i.ToString(), "List", new { categoryId = Model.Category.Id, page = i, sort = Model.SortType, pageSize = Model.PageSize, reverse = Model.Reverse })
                </li>
            }      

            <li class="disabled">...</li>

                    
            for (int i = pageCount - linkCount; i <= pageCount; i++)
            {
                <li>
                    @Html.ActionLink(i.ToString(), "List", new { categoryId = Model.Category.Id, page = i, sort = Model.SortType, pageSize = Model.PageSize, reverse = Model.Reverse })
                </li>
            }
        }

        @if (pageCount > 1 && pageCount < maxPageCount)
        {
            //View all page anchors

            for (int i = 1; i <= pageCount; i++)
            {
                <li>
                    @Html.ActionLink(i.ToString(), "List", new { categoryId = Model.Category.Id, page = i, sort = Model.SortType, pageSize = Model.PageSize, reverse = Model.Reverse })
                </li>
            }
        }
        </ul>
    </div>
</div>
}

<script>
    function getPage() {

        var params = {
            categoryId: "@Model.Category.Id",
            sort: "@Model.SortType",
            pageSize: "@Model.PageSize",
            reverse: "@Model.Reverse"
        };

        var select = document.getElementById("sort");

        switch (select.selectedIndex) {
        case 0:
            params.sort = "Alphabetic";
            params.reverse = "False";
            break;
        case 1:
            params.sort = "Alphabetic";
            params.reverse = "True";
            break;
        case 2:
            params.sort = "Price";
            params.reverse = "False";
            break;
        case 3:
            params.sort = "Price";
            params.reverse = "True";
            break;
        }

        window.location.href = "/product/list?" + $.param(params);
    }
</script>