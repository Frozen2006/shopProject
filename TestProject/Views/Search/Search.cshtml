@using System.Globalization
@model iTechArt.Shop.Web.Models.SearchPageModel

@Scripts.Render("~/Content/js/alerts.js")
@Scripts.Render("~/Content/js/counter.js")

<div class="container-fluid">
<div class="row-fluid">
    <div class="span3">
        <div class="well sidebar-nav">
            <ul class="nav nav-list">
                <li class="nav-header">Categories</li>
                <li>@Html.ActionLink("All results", "Search", "Search", new { data = Model.SearchRequest }, null)</li>
                @foreach (var category in Model.Categories)
                {
                    <li>
                        @Html.ActionLink(category.Category.Name+""+ " (" + category.Count + ")", "Search", "Search", new { data = Model.SearchRequest, category = category.Category.Id }, null)
                    </li>
                }
            </ul>
        </div>
    </div>
    <div class="span9">
        <div class="well well-large results_box">
            <h2>Serach results for: @Model.SearchRequest</h2><br/>
                
            @if (Model.Products.Count() != 0)
            {
                <div class="products"> 
                    <h3>Products</h3>
                        
                    <div id="sort_panel">
                        @{
                            //Calculating selected item index to make it selected
                            int index = 0;
                            index += (int) Model.SortType*2;
                            index += Model.Reverse ? 1 : 0;
                        }

                        <select id="sort" onchange=" getPage() ">
                            <option @(index == 0 ? "selected" : "")>Alphabetic ascending</option>      
                            <option @(index == 1 ? "selected" : "")>Alphabetic descending</option> 
                            <option @(index == 2 ? "selected" : "")>Price ascending</option>                 
                            <option @(index == 3 ? "selected" : "")>Price descending</option>            
                        </select>

                        @for (int i = 1; i < 4; i++)
                        {
                            int size = (int) Math.Pow(10, i);
                            @Html.ActionLink("Show by " + size, "Search", new {category = Model.CategoryId, sort = Model.SortType, pageSize = size, reverse = Model.Reverse, data = Model.SearchRequest}, new {@class = "btn"})
                        }
                    </div> 
                        
                    <script>
                        //public ActionResult Search(string data, string category, int? page, int? pageSize, SortType? sort, bool? reverse)
                        function getPage() {

                            var params = {
                                category: "@Model.CategoryId",
                                sort: "@Model.SortType",
                                pageSize: "@Model.PageSize",
                                reverse: "@Model.Reverse",
                                data: "@Model.SearchRequest",
                            };

                            var select = document.getElementById("sort");

                            switch (select.selectedIndex) {
                            case 0:
                                params.sort = "Alphabetic";
                                params.reverse = "False";
                                break;
                            case 1:
                                params.sort = "Alphabetic";
                                params.reverse = "True";
                                break;
                            case 2:
                                params.sort = "Price";
                                params.reverse = "False";
                                break;
                            case 3:
                                params.sort = "Price";
                                params.reverse = "True";
                                break;
                            }

                            window.location.href = "/search/search?" + $.param(params);
                        }
                    </script>
                        
                    @{
                        int pageSize = Model.PageSize;
                        int productCount = Model.CountAll;
                        int pageCount = (int) Math.Ceiling(productCount/pageSize + 0.5);
                    } 

                    @*This block is generated only once. Then it will be copied via JavaScript to the botton of the page*@
                    <div id="pagination_source" class="pagination pagination-centered">
                        @if (pageCount > 1)
                        {
                            <ul>
                                @if (pageCount < 15)
                                {
                                    for (int i = 1; i <= pageCount; i++)
                                    {
                                        <li @((i == Model.Page) ? "class=active" : "")>
                                            @Html.ActionLink(i.ToString(CultureInfo.InvariantCulture), "Search", new {category = Model.CategoryId, page = i, sort = Model.SortType, pageSize = Model.PageSize, reverse = Model.Reverse, data = Model.SearchRequest})
                                        </li>
                                    }
                                }
                                else
                                {
                                    int firstLinkBlockCount = (Model.Page) < 6 ? 6 : 2;
                                    for (int i = 1; i <= firstLinkBlockCount; i++)
                                    {
                                        <li @((i == Model.Page) ? "class=active" : "")>
                                            @Html.ActionLink(i.ToString(CultureInfo.InvariantCulture), "Search", new {category = Model.CategoryId, page = i, sort = Model.SortType, pageSize = Model.PageSize, reverse = Model.Reverse, data = Model.SearchRequest})
                                        </li>
                                    }

                                    <li class="disabled"><a>...</a></li>
                    
                                    if (Model.Page >= 6 && pageCount - Model.Page >= 5)
                                    {
                                        for (int i = Model.Page - 2; i <= Model.Page + 2; i++)
                                        {
                                            <li @((i == Model.Page) ? "class=active" : "")>
                                                @Html.ActionLink(i.ToString(CultureInfo.InvariantCulture), "Search", new {category = Model.CategoryId, page = i, sort = Model.SortType, pageSize = Model.PageSize, reverse = Model.Reverse, data = Model.SearchRequest})
                                            </li>
                                        }
                        
                                        <li class="disabled"><a>...</a></li>
                                    }

                                    int lastLinkBlockCount = (pageCount - Model.Page) < 5 ? 5 : 1;
                                    for (int i = pageCount - lastLinkBlockCount; i <= pageCount; i++)
                                    {
                                        <li @((i == Model.Page) ? "class=active" : "")>
                                            @Html.ActionLink(i.ToString(CultureInfo.InvariantCulture), "Search", new {category = Model.CategoryId, page = i, sort = Model.SortType, pageSize = Model.PageSize, reverse = Model.Reverse, data = Model.SearchRequest})
                                        </li>
                                    }
                                }
                            </ul>
                        }
                    </div>
                    
                    
                    


                    @foreach (var product in Model.Products)
                    {
                        <div class="well product_box">
                            @{
                                string href = "/product/details/" + product.Id;
                                string path = "/Image/ProductImg/" + product.Id;

                                <div class="info">
                                    <a class="no_underline" href="@href">
                                        <img class="product_photo" width="70" height="70" src="@path" />
                                    </a>
                                    <a href="@href">
                                        @product.Name
                                    </a>
                                </div>

                                <div class="tocart">
                                    @Html.Partial("../Partial/Counter", product)  
                                </div>
                            }     
                        </div>
                    }
                    

                </div>
                
                @*We will copy pagination block here*@
                <div id="pagination_copy"></div>
                
                <script>
                    $(function () {
                        var pagination = $("#pagination_source").clone().appendTo("#pagination_copy");
                    });
                </script>

                <button id="add_all_button" class="btn btn-danger" onclick=" addAll() ">Add all</button>
            }
            else
            {
                // if product's not founded
                if (String.IsNullOrWhiteSpace(Model.SearchRequest))
                {
                    <b><i>Enter more then three characters!</i></b>
                }
            }
            </div>
        </div>
    </div>
</div>


                    
                

