@model TestProject.Models.SearchPageModel

@{
    ViewBag.Title = "Search";
}

<div class="container-fluid">
    <div class="row-fluid">
        <div class="span3">
            <div class="well sidebar-nav">
                <ul class="nav nav-list">
                    <li class="nav-header">Categories</li>
                    <li>@Html.ActionLink("All results", "Search", "Search", new { data = Model.SearchRequest }, null)</li>
                    @foreach (var categoryM in Model.Categories)
                    {
                        <li>
                            @Html.ActionLink(categoryM.Category.Name+""+ " (" + categoryM.Count + ")", "Search", "Search", new { data = Model.SearchRequest, category = categoryM.Category.Name }, null)
                        </li>
                    }
                </ul>
            </div>
        </div>
        <div class="span9">
            <div class="well well-large">
                <h2>Serach results for: @Model.SearchRequest</h2><br/>
                
                @if (Model.Products.Count() != 0)
                {  
                    <div class="products"> 
                        <h3>Products</h3>

                        <div id="sort_panel">
                            <select id="sort" onchange="jsFunction()">
                                <option>Alphabetic ascending</option>      
                                <option>Alphabetic descending</option> 
                                <option>Price ascending</option>                 
                                <option>Price descending</option>            
                            </select>

                            <script>
                                function jsFunction() {

                                    var params = {
                                        categoryId: "@Model.Category.Id",
                                        sort: "@Model.SortType",
                                        pageSize: "@Model.PageSize",
                                        reverse: "@Model.Reverse"
                                    }

                                    var select = document.getElementById("sort");

                                    switch (select.selectedIndex) {
                                    case 0:
                                        params.sort = "Alphabetic";
                                        params.reverse = "False";
                                        break;
                                    case 1:
                                        params.sort = "Alphabetic";
                                        params.reverse = "True";
                                        break;
                                    case 2:
                                        params.sort = "Price";
                                        params.reverse = "False";
                                        break;
                                    case 3:
                                        params.sort = "Price";
                                        params.reverse = "True";
                                        break;
                                    }

                                    window.location.href = "/product/list?" + $.param(params);
                                }
                            </script>

                            @for (int i = 1; i < 4; i++)
                            {
                                int size = (int)Math.Pow(10, i);
                                @Html.ActionLink("Show by " + size, "Search", new { category = Model.Category.Name, sort = Model.SortType, pageSize = size, reverse = Model.Reverse, page = Model.Page, data = Model.SearchRequest }, new { @class = "btn" })
                            }
                        </div>      


                        @foreach(var product in Model.Products)
                        {
                            <div class="well product_box">
                                @{
                                    string href = "/product/details/" + product.Id;
                                    string path = "/Image/ProductImg/" + product.Id;
            
                                    <div class="info">
                                        <a class="no_underline" href="@href">
                                            <img class="product_photo" width="70" height="70" src="@path" />
                                        </a>
                                        <a href="@href">
                                            @product.Name
                                        </a>
                                    </div>
                
                                    <div class="tocart">
                                        <span>Price:</span>
                                        @product.Price
                                        @Html.Partial("../Counter", product.Id)  
                                    </div>
                                }     
                            </div>
                        }

                        @{
                            int pageSize = Model.PageSize;
                            int productCount = Model.CountAll;
                            const int maxPageCount = 15;

                            int pageCount = productCount / pageSize + 1;
                        }

                        <div class="pagination pagination-centered">
                            <ul>
                                @if (pageCount >= maxPageCount)
                                {
                                    const int linkCount = 6;

                                    for (int i = 1; i <= linkCount; i++)
                                    {
                                        <li>
                                            @Html.ActionLink(i.ToString(), "Search", new { category = Model.Category.Name, page = i, sort = Model.SortType, pageSize = Model.PageSize, reverse = Model.Reverse, data = Model.SearchRequest })
                                        </li>
                                    }      

                                    <li class="disabled">...</li>

                    
                                    for (int i = pageCount - linkCount; i <= pageCount; i++)
                                    {
                                        <li>
                                            @Html.ActionLink(i.ToString(), "Search", new { category = Model.Category.Name, page = i, sort = Model.SortType, pageSize = Model.PageSize, reverse = Model.Reverse, data = Model.SearchRequest })
                                        </li>
                                    }
                                }

                                @if (pageCount > 1 && pageCount < maxPageCount)
                                {
                                    //View all page anchors

                                    for (int i = 1; i <= pageCount; i++)
                                    {
                                        <li>
                                            @Html.ActionLink(i.ToString(), "Search", new { categoryId = Model.Category.Id, page = i, sort = Model.SortType, pageSize = Model.PageSize, reverse = Model.Reverse, data = Model.SearchRequest })
                                        </li>
                                    }
                                }
                            </ul>
                        </div>
                    </div>
                }

                <div id="alert-area" style="position: fixed; top: 200px; left: 0%; width: 500px;"></div>
                
            </div>
        </div>
    </div>
</div>


                    
                

<script>
    function newAlert(type, message) {
        $("#alert-area").append($("<div class='alert-message " + type + " fade in' data-alert><p> " + message + " </p></div>"));
        $(".alert-message").delay(2000).fadeOut("slow", function () { $(this).remove(); });
    }

    function getCounter(element) {
        return element.parentNode.getElementsByClassName("counter")[0];
    }

    function increase(event) {
        var counter = getCounter(event.target);
        var count = parseInt(counter.innerHTML);
        count += 1;

        counter.innerHTML = count;
    }

    function decrease(event) {
        var counter = getCounter(event.target);
        var count = parseInt(counter.innerHTML);

        if (count > 1) {
            count -= 1;
            counter.innerHTML = count;
        }
    }

    //public ActionResult AddToCart(int productId, int count)
    function sendRequest(id, c) {
        if (c > 0) {
            $.ajax({
                url: "/Category/AddToCart",
                data: { productId: id, count: c },
                type: "POST",
                success: function(data) {
                    newAlert('alert', data);
                },
                error: function(XMLHttpRequest, textStatus, errorThrown) {
                    alert(textStatus);
                }
            });
        }
    }

    function addToCart(event, productId) {
        var counter = getCounter(event.target);
        var count = parseInt(counter.innerHTML);

        sendRequest(productId, count);
    }
</script>
